<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博客搭建过程</title>
    <link href="/2021/09/01/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%85%A8%E8%BF%87%E7%A8%8B/"/>
    <url>/2021/09/01/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%85%A8%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>@[toc]</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>安装完之后，测试一下是否安装成功</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">node -v<br>npm  -v     # npm是 node的第三方包管理工具<br></code></pre></td></tr></table></figure><p>然后安装<code>nrm</code>包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm i nrm -g     # g是全局安装<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>ls```可以查看当前使用的镜像源</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nrm">## 安装Hexo框架<br><br>```javascript<br>npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>验证是否安装成功</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo -v<br></code></pre></td></tr></table></figure><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>验证是否安装成功</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git --version<br></code></pre></td></tr></table></figure><h1 id="使用Hexo搭建博客"><a href="#使用Hexo搭建博客" class="headerlink" title="使用Hexo搭建博客"></a>使用Hexo搭建博客</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>创建一个 blog 文件夹，并在该文件夹下打开<code>CMD</code>工具</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo init# 完成后会在blog文件夹下生成一些初始化的文件<br></code></pre></td></tr></table></figure><h2 id="预览博客"><a href="#预览博客" class="headerlink" title="预览博客"></a>预览博客</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo s# 运行hexo服务预览博客<br></code></pre></td></tr></table></figure><h2 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo <span class="hljs-keyword">new</span> Your_article_name<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo clean  # 清理一下上一次服务的缓存<br>hexo g# 重新解析一下项目文件<br>hexo d<br></code></pre></td></tr></table></figure><h1 id="生成SSH-KEYS"><a href="#生成SSH-KEYS" class="headerlink" title="生成SSH KEYS"></a>生成SSH KEYS</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性，建立在应用层基础上的协议。<br>利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。<br><br>SSH提供两种级别的安全验证：<br><br>第一种级别(基于口令的安全验证):只要你知道自己帐号和口令,就可以登录到远程主机。<br>所有传输的数据都会被加密,但是不能保证你正在连接的服务器就是你想连接的服务器。<br>可能会有别的服务器在冒充真正的服务器,也就是受到“中间人”这种方式的攻击。<br><br>第二种级别(基于密钥的安全验证):ssh-keygen：需要依靠密钥,这里的密钥是非对称密钥。<br></code></pre></td></tr></table></figure><p>随便进入任何一个文件夹，然后右键<code>Git Bash Here</code></p><h2 id="检查是否已安装ssh"><a href="#检查是否已安装ssh" class="headerlink" title="检查是否已安装ssh"></a>检查是否已安装ssh</h2><p><code>Git Bash</code>下执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ssh<br></code></pre></td></tr></table></figure><h2 id="生成ssh-key并进行绑定"><a href="#生成ssh-key并进行绑定" class="headerlink" title="生成ssh key并进行绑定"></a>生成ssh key并进行绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ssh-keygen -t rsa -C<span class="hljs-string">&quot;github对应的邮箱地址&quot;</span># 命令执行后按 <span class="hljs-number">3</span>或<span class="hljs-number">4</span>次回车。<br></code></pre></td></tr></table></figure><p><code>-t</code>即指定密钥的类型，密钥的类型有两种，一种是<code>RSA</code>，一种是<code>DSA</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">RSA: RSA加密算法是一种非对称加密算法,是由三个麻省理工的牛人弄出来的,RSA是他们三个人姓的开头首字母组合。<br><span class="hljs-attr">DSA</span>: Digital Signature Algorithm (DSA)是Schnorr和ElGamal签名算法的变种。<br></code></pre></td></tr></table></figure><p>之后在<code>C:\Users\管理员</code>下找到<code>.ssh</code>文件夹，将文件夹下的<code>id_rsa.pub</code>文件中的内容全选复制，来到GitHub的<code>settings</code>下的<code>SSH and GPG keys</code><br>新建一个SSH key，名字无所谓，key中直接粘贴，然后点添加。</p><h2 id="测试ssh是否绑定成功"><a href="#测试ssh是否绑定成功" class="headerlink" title="测试ssh是否绑定成功"></a>测试ssh是否绑定成功</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ssh -T git@github.com <br></code></pre></td></tr></table></figure><h1 id="将博客部署到github"><a href="#将博客部署到github" class="headerlink" title="将博客部署到github"></a>将博客部署到github</h1><h2 id="创建一个仓库"><a href="#创建一个仓库" class="headerlink" title="创建一个仓库"></a>创建一个仓库</h2><p>利用 github上的仓库作为我们的服务器去存储我们博客里面的内容。</p><h2 id="安装hexo-deployer-git插件"><a href="#安装hexo-deployer-git插件" class="headerlink" title="安装hexo-deployer-git插件"></a>安装hexo-deployer-git插件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install --save hexo-deployer-git# save表示仅在本项目中安装<br></code></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">找到_config.yml文件<br><span class="hljs-attr">deploy</span>:<br>  type: <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-attr">repo</span>: 对应的仓库地址<br>  <span class="hljs-attr">branch</span>: main<br></code></pre></td></tr></table></figure><h2 id="将本地项目推送到github上"><a href="#将本地项目推送到github上" class="headerlink" title="将本地项目推送到github上"></a>将本地项目推送到github上</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo d<br></code></pre></td></tr></table></figure><p>这个时候会让输入github的账号密码，由于github的更新，此时我们输入密码时实际要输入Token令牌，而且有时候不能复制粘贴过去。</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git clone 主题的github仓库地址 themes/主题名字# 注意要在blog文件夹下的CMD中执行<br><br>举例:<br>git clone next主题的github仓库地址 themes/next<br></code></pre></td></tr></table></figure><p>下载完成之后要去将<code>_config.yml</code>文件中的 theme 值修改为新的主题名字<br>然后</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
